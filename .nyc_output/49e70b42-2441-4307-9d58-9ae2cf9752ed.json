{"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\lookup\\ServiceLookup.ts":{"path":"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\lookup\\ServiceLookup.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":19},"end":{"line":6,"column":66}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":81}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":73}},"6":{"start":{"line":15,"column":8},"end":{"line":15,"column":65}},"7":{"start":{"line":18,"column":8},"end":{"line":19,"column":25}},"8":{"start":{"line":19,"column":12},"end":{"line":19,"column":25}},"9":{"start":{"line":20,"column":25},"end":{"line":20,"column":34}},"10":{"start":{"line":21,"column":8},"end":{"line":28,"column":9}},"11":{"start":{"line":22,"column":12},"end":{"line":27,"column":13}},"12":{"start":{"line":23,"column":16},"end":{"line":23,"column":63}},"13":{"start":{"line":25,"column":17},"end":{"line":27,"column":13}},"14":{"start":{"line":26,"column":16},"end":{"line":26,"column":29}},"15":{"start":{"line":29,"column":8},"end":{"line":29,"column":40}},"16":{"start":{"line":32,"column":0},"end":{"line":32,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":10,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":34},"end":{"line":13,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":33},"end":{"line":16,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":33},"end":{"line":30,"column":5}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":18,"column":8},"end":{"line":19,"column":25}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":19,"column":25}},{"start":{"line":18,"column":8},"end":{"line":19,"column":25}}],"line":18},"4":{"loc":{"start":{"line":18,"column":12},"end":{"line":18,"column":55}},"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":32}},{"start":{"line":18,"column":36},"end":{"line":18,"column":55}}],"line":18},"5":{"loc":{"start":{"line":22,"column":12},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":27,"column":13}},{"start":{"line":22,"column":12},"end":{"line":27,"column":13}}],"line":22},"6":{"loc":{"start":{"line":25,"column":17},"end":{"line":27,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":17},"end":{"line":27,"column":13}},{"start":{"line":25,"column":17},"end":{"line":27,"column":13}}],"line":25},"7":{"loc":{"start":{"line":25,"column":21},"end":{"line":25,"column":120}},"type":"binary-expr","locations":[{"start":{"line":25,"column":21},"end":{"line":25,"column":68}},{"start":{"line":25,"column":72},"end":{"line":25,"column":120}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":17,"7":6,"8":1,"9":5,"10":5,"11":9,"12":5,"13":4,"14":2,"15":3,"16":1},"f":{"0":1,"1":1,"2":4,"3":17,"4":6},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,5],"4":[6,6],"5":[5,4],"6":[2,2],"7":[4,4]},"inputSourceMap":{"version":3,"file":"E:/files/lab/UQL/UnifyQL_ts/src/lookup/ServiceLookup.ts","sources":["E:/files/lab/UQL/UnifyQL_ts/src/lookup/ServiceLookup.ts"],"names":[],"mappings":";;;;;AAAA,mEAA2C;AAK3C,MAAM,aAAa;IAAnB;QAEY,wBAAmB,GAAyB,kBAAQ,CAAC,GAAG,CAAuB,qBAAqB,CAAC,CAAC;IAsBlH,CAAC;IApBU,gBAAgB,CAAC,WAAmB;QACvC,OAAO,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,WAAW,CAAC,CAAC;IACrE,CAAC;IAEM,qBAAqB,CAAC,KAAa;QACtC,OAAO,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAEM,oBAAoB,CAAC,MAAgB;QACxC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,KAAK,CAAC;QAC9D,IAAI,UAAU,GAAuB,SAAS,CAAC;QAC/C,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YACxB,IAAI,UAAU,KAAK,SAAS,EAAE;gBAC1B,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;aAClD;iBAAM,IAAI,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,KAAK,SAAS,IAAI,UAAU,KAAK,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,EAAE;gBAC5G,OAAO,KAAK,CAAC;aAChB;SACJ;QACD,OAAO,UAAU,KAAK,SAAS,CAAC;IACpC,CAAC;CACJ;AAED,kBAAe,aAAa,CAAC","sourcesContent":["import injector from '../utility/Injector';\r\nimport IServiceLookup from './IServiceLookup';\r\nimport IServiceConfig from '../data-model/IServiceConfig';\r\nimport IServiceConfigSource from './IServiceConfigSource';\r\n\r\nclass ServiceLookup implements IServiceLookup {\r\n\r\n    private serviceConfigSource: IServiceConfigSource = injector.get<IServiceConfigSource>('ServiceConfigSource');\r\n\r\n    public getServiceConfig(serviceName: string): IServiceConfig {\r\n        return this.serviceConfigSource.getServiceConfigs()[serviceName];\r\n    }\r\n\r\n    public getServiceNameByTable(table: string): string {\r\n        return this.serviceConfigSource.getTableMapping()[table];\r\n    }\r\n\r\n    public isAllFromSameService(tables: string[]): boolean {\r\n        if (tables === undefined || tables.length === 0) return false;\r\n        let refService: string | undefined = undefined;\r\n        for (const table of tables) {\r\n            if (refService === undefined) {\r\n                refService = this.getServiceNameByTable(table);\r\n            } else if (this.getServiceNameByTable(table) === undefined || refService !== this.getServiceNameByTable(table)) {\r\n                return false;\r\n            }\r\n        }\r\n        return refService !== undefined;\r\n    }\r\n}\r\n\r\nexport default ServiceLookup;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c19d8209b38aa7eaa417ad5a72fa8f3d67fbf286","contentHash":"62e734dcff2aa9ebaa4ae14af7dc381290857637e7886d1e05f8b35489e54e64"},"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\utility\\Injector.ts":{"path":"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\utility\\Injector.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":32}},"2":{"start":{"line":6,"column":8},"end":{"line":8,"column":10}},"3":{"start":{"line":7,"column":39},"end":{"line":7,"column":99}},"4":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"5":{"start":{"line":12,"column":12},"end":{"line":12,"column":44}},"6":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"7":{"start":{"line":15,"column":12},"end":{"line":15,"column":48}},"8":{"start":{"line":17,"column":25},"end":{"line":17,"column":58}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":44}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":44}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":24}},"13":{"start":{"line":26,"column":8},"end":{"line":26,"column":51}},"14":{"start":{"line":29,"column":8},"end":{"line":29,"column":40}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":47}},"16":{"start":{"line":35,"column":17},"end":{"line":35,"column":31}},"17":{"start":{"line":36,"column":0},"end":{"line":36,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":18},"end":{"line":9,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":33},"end":{"line":7,"column":34}},"loc":{"start":{"line":7,"column":39},"end":{"line":7,"column":99}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":14},"end":{"line":20,"column":5}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":24},"end":{"line":24,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":28},"end":{"line":27,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":17},"end":{"line":30,"column":5}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":21},"end":{"line":33,"column":5}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},"type":"if","locations":[{"start":{"line":11,"column":8},"end":{"line":13,"column":9}},{"start":{"line":11,"column":8},"end":{"line":13,"column":9}}],"line":11},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,1],"1":[0,1]},"inputSourceMap":{"version":3,"file":"E:/files/lab/UQL/UnifyQL_ts/src/utility/Injector.ts","sources":["E:/files/lab/UQL/UnifyQL_ts/src/utility/Injector.ts"],"names":[],"mappings":";;AAAA,MAAM,QAAQ;IAAd;QACY,kBAAa,GAA2B,EAAE,CAAA;QAE1C,yBAAoB,GAAiC;YACzD,mBAAmB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC,CAAC,OAAO,EAAE;SAC1F,CAAA;IA8BL,CAAC;IA5BU,GAAG,CAAI,IAAY;QACtB,IAAI,IAAI,IAAI,IAAI,CAAC,aAAa,EAAE;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,oBAAoB,CAAC,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;SACvC;QACD,MAAM,QAAQ,GAAM,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC;QACtD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QACpC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,GAAG,CAAI,IAAY,EAAE,QAAa;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;QACpC,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEM,OAAO,CAAC,IAAY,EAAE,QAAmB;QAC5C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;IAC/C,CAAC;IAEM,MAAM,CAAC,IAAY;QACtB,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC;IAEM,UAAU,CAAC,IAAY;QAC1B,OAAO,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;CACJ;AAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;AAEhC,kBAAe,QAAQ,CAAC","sourcesContent":["class Injector {\r\n    private instancesPool: { [key: string]: any } = {}\r\n\r\n    private lazyInstancesFactory: { [key: string]: () => any } = {\r\n        ServiceConfigSource: () => new (require('../lookup/FileServiceConfigSource')).default()\r\n    }\r\n\r\n    public get<T>(name: string): T {\r\n        if (name in this.instancesPool) {\r\n            return this.instancesPool[name];\r\n        }\r\n        if (!(name in this.lazyInstancesFactory)) {\r\n            throw new Error('Instance not set');\r\n        }\r\n        const instance: T = this.lazyInstancesFactory[name]();\r\n        this.instancesPool[name] = instance;\r\n        return instance;\r\n    }\r\n\r\n    public set<T>(name: string, instance: any): T {\r\n        this.instancesPool[name] = instance;\r\n        return instance;\r\n    }\r\n\r\n    public setLazy(name: string, instance: () => any): void {\r\n        this.lazyInstancesFactory[name] = instance;\r\n    }\r\n\r\n    public remove(name: string): void {\r\n        delete this.instancesPool[name];\r\n    }\r\n\r\n    public removeLazy(name: string): void {\r\n        delete this.lazyInstancesFactory[name];\r\n    }\r\n}\r\n\r\nconst injector = new Injector();\r\n\r\nexport default injector;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"931b670b875399ed70cb5d32b9cc26d6c63d07df","contentHash":"baf104f3ef36aefc10d24f5788c8bfdcf4cd0c390021165215bda5c61ba25258"},"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\lookup\\FileServiceConfigSource.ts":{"path":"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\lookup\\FileServiceConfigSource.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":33}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":31}},"3":{"start":{"line":7,"column":28},"end":{"line":7,"column":68}},"4":{"start":{"line":8,"column":8},"end":{"line":14,"column":9}},"5":{"start":{"line":9,"column":32},"end":{"line":9,"column":54}},"6":{"start":{"line":10,"column":12},"end":{"line":10,"column":58}},"7":{"start":{"line":11,"column":12},"end":{"line":13,"column":13}},"8":{"start":{"line":12,"column":16},"end":{"line":12,"column":55}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":35}},"10":{"start":{"line":20,"column":8},"end":{"line":20,"column":33}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":18},"end":{"line":15,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":24},"end":{"line":18,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":22},"end":{"line":21,"column":5}},"line":19}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":4,"8":7,"9":4,"10":17,"11":1},"f":{"0":1,"1":4,"2":17},"b":{},"inputSourceMap":{"version":3,"file":"E:/files/lab/UQL/UnifyQL_ts/src/lookup/FileServiceConfigSource.ts","sources":["E:/files/lab/UQL/UnifyQL_ts/src/lookup/FileServiceConfigSource.ts"],"names":[],"mappings":";;AAGA,MAAM,uBAAuB;IAIzB;QAHQ,mBAAc,GAAsC,EAAE,CAAC;QACvD,iBAAY,GAA8B,EAAE,CAAC;QAGjD,MAAM,WAAW,GAAqB,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC/E,KAAK,MAAM,UAAU,IAAI,WAAW,EAAE;YAClC,MAAM,WAAW,GAAW,UAAU,CAAC,WAAW,CAAC;YACnD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,GAAG,UAAU,CAAC;YAC9C,KAAK,MAAM,KAAK,IAAI,UAAU,CAAC,MAAM,EAAE;gBACnC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,WAAW,CAAC;aAC1C;SACJ;IACL,CAAC;IAEM,iBAAiB;QACpB,OAAO,IAAI,CAAC,cAAc,CAAC;IAC/B,CAAC;IAEM,eAAe;QAClB,OAAO,IAAI,CAAC,YAAY,CAAC;IAC7B,CAAC;CACJ;AAED,kBAAe,uBAAuB,CAAC","sourcesContent":["import IServiceConfig from '../data-model/IServiceConfig';\r\nimport IServiceConfigSource from './IServiceConfigSource';\r\n\r\nclass FileServiceConfigSource implements IServiceConfigSource {\r\n    private serviceConfigs: { [key: string]: IServiceConfig } = {};\r\n    private tableMapping: { [key: string]: string } = {};\r\n\r\n    constructor() {\r\n        const fileConfigs: IServiceConfig[] = require('../../res/service_config.json');\r\n        for (const fileConfig of fileConfigs) {\r\n            const serviceName: string = fileConfig.serviceName;\r\n            this.serviceConfigs[serviceName] = fileConfig;\r\n            for (const table of fileConfig.tables) {\r\n                this.tableMapping[table] = serviceName;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getServiceConfigs(): { [key: string]: IServiceConfig } {\r\n        return this.serviceConfigs;\r\n    }\r\n\r\n    public getTableMapping(): { [key: string]: string } {\r\n        return this.tableMapping;\r\n    }\r\n}\r\n\r\nexport default FileServiceConfigSource;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7486ccf84385f5c2f0f54c227705d0c412a710f9","contentHash":"95ca4761913879e08feff36de69ed87c24d530d4053f17e5269d1142e86a76de"},"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\query-chain\\QueryChainBuilder.ts":{"path":"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\query-chain\\QueryChainBuilder.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":61}},"4":{"start":{"line":7,"column":35},"end":{"line":7,"column":100}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":25}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":38}},"7":{"start":{"line":12,"column":28},"end":{"line":12,"column":58}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":29}},"9":{"start":{"line":14,"column":8},"end":{"line":26,"column":9}},"10":{"start":{"line":15,"column":34},"end":{"line":15,"column":64}},"11":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"12":{"start":{"line":17,"column":16},"end":{"line":17,"column":98}},"13":{"start":{"line":19,"column":12},"end":{"line":19,"column":120}},"14":{"start":{"line":20,"column":12},"end":{"line":25,"column":15}},"15":{"start":{"line":29,"column":35},"end":{"line":29,"column":37}},"16":{"start":{"line":30,"column":36},"end":{"line":30,"column":38}},"17":{"start":{"line":31,"column":28},"end":{"line":31,"column":41}},"18":{"start":{"line":32,"column":27},"end":{"line":32,"column":29}},"19":{"start":{"line":33,"column":24},"end":{"line":33,"column":33}},"20":{"start":{"line":34,"column":8},"end":{"line":50,"column":9}},"21":{"start":{"line":35,"column":26},"end":{"line":35,"column":47}},"22":{"start":{"line":36,"column":29},"end":{"line":36,"column":60}},"23":{"start":{"line":37,"column":32},"end":{"line":37,"column":53}},"24":{"start":{"line":38,"column":35},"end":{"line":38,"column":40}},"25":{"start":{"line":39,"column":12},"end":{"line":45,"column":13}},"26":{"start":{"line":40,"column":16},"end":{"line":41,"column":29}},"27":{"start":{"line":41,"column":20},"end":{"line":41,"column":29}},"28":{"start":{"line":42,"column":16},"end":{"line":42,"column":40}},"29":{"start":{"line":43,"column":16},"end":{"line":43,"column":96}},"30":{"start":{"line":44,"column":16},"end":{"line":44,"column":47}},"31":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"32":{"start":{"line":47,"column":16},"end":{"line":47,"column":35}},"33":{"start":{"line":49,"column":12},"end":{"line":49,"column":37}},"34":{"start":{"line":51,"column":8},"end":{"line":51,"column":38}},"35":{"start":{"line":52,"column":8},"end":{"line":52,"column":26}},"36":{"start":{"line":53,"column":8},"end":{"line":64,"column":9}},"37":{"start":{"line":54,"column":26},"end":{"line":54,"column":47}},"38":{"start":{"line":55,"column":29},"end":{"line":55,"column":60}},"39":{"start":{"line":56,"column":32},"end":{"line":56,"column":53}},"40":{"start":{"line":57,"column":12},"end":{"line":62,"column":13}},"41":{"start":{"line":58,"column":16},"end":{"line":59,"column":29}},"42":{"start":{"line":59,"column":20},"end":{"line":59,"column":29}},"43":{"start":{"line":60,"column":16},"end":{"line":60,"column":120}},"44":{"start":{"line":61,"column":16},"end":{"line":61,"column":47}},"45":{"start":{"line":63,"column":12},"end":{"line":63,"column":37}},"46":{"start":{"line":65,"column":8},"end":{"line":65,"column":81}},"47":{"start":{"line":68,"column":8},"end":{"line":69,"column":27}},"48":{"start":{"line":69,"column":12},"end":{"line":69,"column":27}},"49":{"start":{"line":70,"column":8},"end":{"line":70,"column":32}},"50":{"start":{"line":73,"column":21},"end":{"line":73,"column":40}},"51":{"start":{"line":74,"column":21},"end":{"line":74,"column":39}},"52":{"start":{"line":75,"column":22},"end":{"line":75,"column":40}},"53":{"start":{"line":76,"column":8},"end":{"line":81,"column":10}},"54":{"start":{"line":84,"column":0},"end":{"line":84,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":54},"end":{"line":27,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":12},"end":{"line":66,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":42},"end":{"line":71,"column":5}},"line":67},"4":{"name":"(anonymous_4)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":30},"end":{"line":82,"column":5}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16},"4":{"loc":{"start":{"line":16,"column":16},"end":{"line":16,"column":114}},"type":"binary-expr","locations":[{"start":{"line":16,"column":16},"end":{"line":16,"column":64}},{"start":{"line":16,"column":68},"end":{"line":16,"column":114}}],"line":16},"5":{"loc":{"start":{"line":40,"column":16},"end":{"line":41,"column":29}},"type":"if","locations":[{"start":{"line":40,"column":16},"end":{"line":41,"column":29}},{"start":{"line":40,"column":16},"end":{"line":41,"column":29}}],"line":40},"6":{"loc":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},{"start":{"line":46,"column":12},"end":{"line":48,"column":13}}],"line":46},"7":{"loc":{"start":{"line":58,"column":16},"end":{"line":59,"column":29}},"type":"if","locations":[{"start":{"line":58,"column":16},"end":{"line":59,"column":29}},{"start":{"line":58,"column":16},"end":{"line":59,"column":29}}],"line":58},"8":{"loc":{"start":{"line":68,"column":8},"end":{"line":69,"column":27}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":69,"column":27}},{"start":{"line":68,"column":8},"end":{"line":69,"column":27}}],"line":68}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":2,"9":2,"10":5,"11":5,"12":1,"13":4,"14":4,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":4,"22":4,"23":4,"24":4,"25":4,"26":6,"27":3,"28":3,"29":3,"30":3,"31":4,"32":2,"33":4,"34":1,"35":1,"36":1,"37":4,"38":4,"39":4,"40":4,"41":6,"42":3,"43":3,"44":3,"45":4,"46":1,"47":14,"48":11,"49":14,"50":5,"51":5,"52":5,"53":5,"54":1},"f":{"0":2,"1":2,"2":1,"3":14,"4":5},"b":{"0":[1,1,1],"1":[2,0],"2":[2,2],"3":[1,4],"4":[5,4],"5":[3,3],"6":[2,2],"7":[3,3],"8":[11,3]},"inputSourceMap":{"version":3,"file":"E:/files/lab/UQL/UnifyQL_ts/src/query-chain/QueryChainBuilder.ts","sources":["E:/files/lab/UQL/UnifyQL_ts/src/query-chain/QueryChainBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["import QueryChain from \"./QueryChain\";\r\nimport IQueryChainRelation from \"./IQueryChainRelation\";\r\nimport QueryChainBuildException from \"../exception/QueryChainBuildException\";\r\n\r\ntype IQueryChainRelationMap = { [key: string]: { [key: string]: IQueryChainRelation } };\r\n\r\nclass QueryChainBuilder {\r\n    private target: string = '';\r\n    private completeRelationMap: IQueryChainRelationMap = {};\r\n\r\n    constructor(target: string, associationTables: string[], relations: string[]) {\r\n        let definedTables: string[] = [target, ...associationTables];\r\n        this.target = target;\r\n        for (const relation of relations) {\r\n            const tableRelation: IQueryChainRelation = this.extractRelation(relation);\r\n            if (!definedTables.includes(tableRelation.fromTable) || !definedTables.includes(tableRelation.toTable)) {\r\n                throw new QueryChainBuildException(`${relation} using undefined table`);\r\n            }\r\n            this.safeMapAssign(this.completeRelationMap, tableRelation.fromTable, tableRelation.toTable, tableRelation);\r\n            this.safeMapAssign(\r\n                this.completeRelationMap,\r\n                tableRelation.toTable,\r\n                tableRelation.fromTable,\r\n                {\r\n                    fromTable: tableRelation.toTable,\r\n                    fromField: tableRelation.toField,\r\n                    toTable: tableRelation.fromTable,\r\n                    toField: tableRelation.fromField\r\n                });\r\n        }\r\n    }\r\n\r\n    public build(): QueryChain {\r\n        const forwardRelationMap: IQueryChainRelationMap = {};\r\n        const backwardRelationMap: IQueryChainRelationMap = {};\r\n        let trackingTable: string[] = [this.target];\r\n        let visitedTable: string[] = [];\r\n        const endNode: Set<string> = new Set();\r\n        while (trackingTable.length !== 0) {\r\n            const table: string = trackingTable.shift()!;\r\n            const relation: { [key: string]: IQueryChainRelation } = this.completeRelationMap[table];\r\n            const descendants: string[] = Object.keys(relation);\r\n            let hasNewDescendant = false;\r\n            for (const descendant of descendants) {\r\n                if (visitedTable.includes(descendant)) continue;\r\n                hasNewDescendant = true;\r\n                this.safeMapAssign(forwardRelationMap, table, descendant, relation[descendant]);\r\n                trackingTable.push(descendant);\r\n            }\r\n            if (!hasNewDescendant) {\r\n                endNode.add(table);\r\n            }\r\n            visitedTable.push(table);\r\n        }\r\n        trackingTable = [this.target];\r\n        visitedTable = [];\r\n        while (trackingTable.length !== 0) {\r\n            const table: string = trackingTable.shift()!;\r\n            const relation: { [key: string]: IQueryChainRelation } = this.completeRelationMap[table];\r\n            const descendants: string[] = Object.keys(relation);\r\n            for (const descendant of descendants) {\r\n                if (visitedTable.includes(descendant)) continue;\r\n                this.safeMapAssign(backwardRelationMap, descendant, table, this.completeRelationMap[descendant][table]);\r\n                trackingTable.push(descendant);\r\n            }\r\n            visitedTable.push(table);\r\n        }\r\n        return new QueryChain(forwardRelationMap, backwardRelationMap);\r\n    }\r\n\r\n    private safeMapAssign(map: any, key1: string, key2: string, value: any): void {\r\n        if (map[key1] === undefined) map[key1] = {};\r\n        map[key1][key2] = value;\r\n    }\r\n\r\n    private extractRelation(relation: string): IQueryChainRelation {\r\n        const side = relation.split('=');\r\n        const left = side[0].split('.');\r\n        const right = side[1].split('.');\r\n        return {\r\n            fromTable: left[0],\r\n            fromField: left[1],\r\n            toTable: right[0],\r\n            toField: right[1]\r\n        };\r\n    }\r\n}\r\n\r\nexport default QueryChainBuilder;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6bf027d7da5cbb2fe14d31ac103bc91e3201bcee","contentHash":"4c21d6bbbc0803ca5b242a714b12a132da555c70b4cff3ef94fc90423225e17f"},"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\query-chain\\QueryChain.ts":{"path":"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\query-chain\\QueryChain.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":38}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":39}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":54}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":56}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":40}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":41}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":57},"end":{"line":9,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":29},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":30},"end":{"line":15,"column":5}},"line":13}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"E:/files/lab/UQL/UnifyQL_ts/src/query-chain/QueryChain.ts","sources":["E:/files/lab/UQL/UnifyQL_ts/src/query-chain/QueryChain.ts"],"names":[],"mappings":";;AAIA,MAAM,UAAU;IAIZ,YAAY,kBAA0C,EAAE,mBAA2C;QAH3F,wBAAmB,GAA2B,EAAE,CAAC;QACjD,yBAAoB,GAA2B,EAAE,CAAC;QAGtD,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;IACpD,CAAC;IAED,IAAW,kBAAkB;QACzB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IACpC,CAAC;IAED,IAAW,mBAAmB;QAC1B,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACrC,CAAC;CACJ;AAED,kBAAe,UAAU,CAAC","sourcesContent":["import IQueryChainRelation from \"./IQueryChainRelation\";\r\n\r\ntype IQueryChainRelationMap = { [key: string]: { [key: string]: IQueryChainRelation } };\r\n\r\nclass QueryChain {\r\n    private _forwardRelationMap: IQueryChainRelationMap = {};\r\n    private _backwardRelationMap: IQueryChainRelationMap = {};\r\n\r\n    constructor(forwardRelationMap: IQueryChainRelationMap, backwardRelationMap: IQueryChainRelationMap) {\r\n        this._forwardRelationMap = forwardRelationMap;\r\n        this._backwardRelationMap = backwardRelationMap;\r\n    }\r\n\r\n    public get forwardRelationMap(): IQueryChainRelationMap {\r\n        return this._forwardRelationMap;\r\n    }\r\n\r\n    public get backwardRelationMap(): IQueryChainRelationMap {\r\n        return this._backwardRelationMap;\r\n    }\r\n}\r\n\r\nexport default QueryChain;"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fcbc644c987e3edc9bab56a3006eb27c157a073d","contentHash":"bf17021543044e85dff6b3ba0753f93f71ecde19076d6323331a0644068486bf"},"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\exception\\QueryChainBuildException.ts":{"path":"E:\\files\\lab\\UQL\\UnifyQL_ts\\src\\exception\\QueryChainBuildException.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":23}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":25},"end":{"line":7,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"E:/files/lab/UQL/UnifyQL_ts/src/exception/QueryChainBuildException.ts","sources":["E:/files/lab/UQL/UnifyQL_ts/src/exception/QueryChainBuildException.ts"],"names":[],"mappings":";;AAAA,MAAqB,wBAAyB,SAAQ,KAAK;IAGvD,YAAY,OAAe;QACvB,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;CACJ;AAPD,2CAOC","sourcesContent":["export default class QueryChainBuildException extends Error {\r\n    public readonly message: string;\r\n\r\n    constructor(message: string) {\r\n        super(message);\r\n        this.message = message;\r\n    }\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4c2c193068389fa257a56ec799e971e5bac0ce12","contentHash":"50e44ca0c2403b0792b99ba8afa052e631e9529a3fc65f13def94868118ff11d"}}